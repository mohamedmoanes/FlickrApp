plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
}


android {
    compileSdk 30

    defaultConfig {
        applicationId "com.moanes.flickrapp"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "SERVER_URL", '"https://api.flickr.com/services/rest/"'
        }


        debug {
            def proguard = true
            minifyEnabled proguard

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "SERVER_URL", '"https://api.flickr.com/services/"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies { configuration ->
    implementation platform("com.squareup.okhttp3:okhttp-bom:4.9.0")

    androidX(configuration)
    navigation(configuration)
    lifecycle(configuration)
    retrofit(configuration)
    room(configuration)
    coroutines(configuration)
    koin(configuration)
    imageLoader(configuration)
    progressBar(configuration)
    dimens(configuration)
    imageZoom(configuration)

    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'
    testImplementation "io.mockk:mockk:1.10.0"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

private static void androidX(configuration) {
    def version = "1.0.0"


    configuration.implementation "androidx.legacy:legacy-support-v4:$version"
    configuration.implementation "androidx.cardview:cardview:$version"
    configuration.implementation "androidx.recyclerview:recyclerview:1.2.0-beta01"
    configuration.implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    configuration.implementation 'androidx.appcompat:appcompat:1.3.1'
    configuration.implementation "androidx.preference:preference-ktx:1.1.1"
    configuration.implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    configuration.implementation "com.google.android.material:material:1.4.0"

}

private static void navigation(configuration) {
    def nav_version = "2.3.5"

    configuration.implementation "androidx.navigation:navigation-fragment:$nav_version"
    configuration.implementation "androidx.navigation:navigation-ui:$nav_version"
    configuration.implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    configuration.implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    configuration.implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
}

private static void lifecycle(configuration) {
    def lifecycle_version = "2.3.1"

    configuration.implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    configuration.implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    configuration.implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    configuration.implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
}

private static void retrofit(configuration) {
    def retrofit_version = "2.9.0"

    configuration.implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    configuration.implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    configuration.implementation "com.squareup.okhttp3:okhttp"
    configuration.debugImplementation "com.squareup.okhttp3:logging-interceptor"

    configuration.debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'
}

private static void room(configuration){
    def room_version = "2.3.0"

    configuration.implementation "androidx.room:room-runtime:$room_version"
    configuration.implementation "androidx.room:room-ktx:$room_version"
    configuration.annotationProcessor "androidx.room:room-compiler:$room_version"
    configuration.kapt  ("androidx.room:room-compiler:$room_version")

}
private static void coroutines(configuration) {
    def coroutines_version = "1.4.2"
    configuration.implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    configuration.implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
}

private static void koin(configuration) {
    def koin_version = "3.1.2"
    configuration.implementation "io.insert-koin:koin-android:$koin_version"
    configuration.testImplementation "org.koin:koin-test:$koin_version"
}


private static void imageLoader(configuration) {
    configuration.implementation 'com.squareup.picasso:picasso:2.71828'
    configuration.implementation'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
}

private static void imageZoom(configuration) {
    configuration.implementation 'com.ablanco.zoomy:zoomy:1.1.0'
}

private static void progressBar(configuration) {
    configuration.implementation 'com.wang.avi:library:2.1.3'
}

private static void dimens(configuration) {
    configuration.implementation 'com.intuit.sdp:sdp-android:1.0.6'
    configuration.implementation 'com.intuit.ssp:ssp-android:1.0.6'
}